from models import *
import random
import datetime
import pytz
import data.config as config

from handlers.main import utils

deposite = '–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç–æ–¥ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è:'
withdraw = '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∞–∫—Ç–∏–≤–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞'

withdraw_send = '–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –≤—ã–≤–æ–¥–∞'
withdraw_send_requisites = '–í–≤–µ–¥–∏—Ç–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã'

spot = '''<b>–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ —Ä–∞–∑–¥–µ–ª –°–ø–æ—Ç–æ–≤–∞—è –¢–æ—Ä–≥–æ–≤–ª—è. –î–∞–Ω–Ω—ã–π –≤–∏–¥ —Ç–æ—Ä–≥–æ–≤–ª–∏ –ø–æ–¥—Ä–∞–∑—É–º–µ–≤–∞–µ—Ç –Ω–µ–ø–æ—Å—Ä–µ–¥—Å—Ç–≤–µ–Ω–Ω—É—é –ø–æ–∫—É–ø–∫—É –∏ –ø—Ä–æ–¥–∞–∂—É —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ –∏ –∞–∫—Ç–∏–≤–æ–≤, –Ω–∞–ø—Ä–∏–º–µ—Ä —Ç–∞–∫–∏—Ö –∫–∞–∫ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã.</b>'''

futures = '''<b>üîπ –§—å—é—á–µ—Ä—Å ‚Äî –ø—Ä–æ–∏–∑–≤–æ–¥–Ω—ã–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –Ω–∞ –±–∏—Ä–∂–µ –∫—É–ø–ª–∏-–ø—Ä–æ–¥–∞–∂–∏ –±–∞–∑–æ–≤–æ–≥–æ –∞–∫—Ç–∏–≤–∞, –ø—Ä–∏ –∑–∞–∫–ª—é—á–µ–Ω–∏–∏ –∫–æ—Ç–æ—Ä–æ–≥–æ —Å—Ç–æ—Ä–æ–Ω—ã –¥–æ–≥–æ–≤–∞—Ä–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –æ —Ü–µ–Ω–µ –∏ —Å—Ä–æ–∫–µ –ø–æ—Å—Ç–∞–≤–∫–∏.

–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É –¥–ª—è —Å–æ–≤–µ—Ä—à–µ–Ω–∏—è —Å–¥–µ–ª–∫–∏:</b>'''

support = '''‚úÖ –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–∫—Ä—ã—Ç—å –∑–∞—è–≤–∫—É –≤ —Å–ª—É–∂–±—É –ø–æ–¥–¥–µ—Ä–∂–∫–∏ BITGET. –°–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –æ—Ç–≤–µ—Ç–∏—Ç –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è. 
–î–ª—è –±–æ–ª–µ–µ –±—ã—Å—Ç—Ä–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã –æ–ø–∏—Å—ã–≤–∞–π—Ç–µ —Å–≤–æ–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —á–µ—Ç–∫–æ, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ —Ñ–∞–π–ª—ã –∏/–∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è. 

–ü—Ä–∞–≤–∏–ª–∞ –æ–±—Ä–∞—â–µ–Ω–∏—è –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É BITGET:

1. –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –æ–±—Ä–∞—â–µ–Ω–∏–∏ –≤ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ø–æ–¥–¥–µ—Ä–∂–∫—É, –ø—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ—Å—å –∏ —É–∫–∞–∂–∏—Ç–µ –≤–∞—à ID –∏–∑ –ª–∏—á–Ω–æ–≥–æ –∫–∞–±–∏–Ω–µ—Ç–∞, —á—Ç–æ–±—ã —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –º–æ–≥ –Ω–∞–π—Ç–∏ –í–∞—à –ª–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç –≤ —Å–∏—Å—Ç–µ–º–µ BITGET.
2. –ü–æ–¥—Ä–æ–±–Ω–æ –æ–ø–∏—à–∏—Ç–µ –í–∞—à—É –ø—Ä–æ–±–ª–µ–º—É, –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏/–∏–ª–∏ —Ñ–∞–π–ª—ã.
3. –ë—É–¥—å—Ç–µ –≤–µ–∂–ª–∏–≤—ã –∏ –í–∞–º –≤—Å–µ–≥–¥–∞ –ø–æ–º–æ–≥—É—Ç!'''

info = '''üìò –û —Å–µ—Ä–≤–∏—Å–µ

<b>BITGET - —ç—Ç–æ —Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è –±–∏—Ä–∂–∞ –¥–ª—è —Ç–æ—Ä–≥–æ–≤–ª–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–æ–π –∏ —Ñ—å—é—á–µ—Ä—Å–Ω—ã–º–∏ –∞–∫—Ç–∏–≤–∞–º–∏.</b>

–ú—ã —Å—Ç—Ä–æ–∏–º –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—É—é —ç–∫–æ–Ω–æ–º–∏–∫—É ‚Äî –±–æ–ª–µ–µ —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤—É—é, –¥–æ—Å—Ç—É–ø–Ω—É—é, —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—É—é –∏ –ø—Ä–æ–∑—Ä–∞—á–Ω—É—é —Ñ–∏–Ω–∞–Ω—Å–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É, –æ—Å–Ω–æ–≤–∞–Ω–Ω—É—é –Ω–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–µ.'''

verif = '''<b>üî∑ –ú—ã —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç. –í—ã –º–æ–∂–µ—Ç–µ —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å –ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ —É—Å–ø–µ—à–Ω–æ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ –Ω–∞–ø–∏—Å–∞–≤ '–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è' –≤ –¢–µ—Ö–Ω–∏—á–µ—Å–∫—É—é –ü–æ–¥–¥–µ—Ä–∂–∫—É, —Å–ø–∞—Å–∏–±–æ!</b>

 ‚úÖ –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞:
1. –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –≤ –æ—á–µ—Ä–µ–¥–∏ –∫ –≤—ã–≤–æ–¥—É
2. –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –ª–∏–º–∏—Ç–æ–≤ –Ω–∞ –≤—ã–≤–æ–¥ —Å—Ä–µ–¥—Å—Ç–≤
3. –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ö—Ä–∞–Ω–∏—Ç—å —Å—Ä–µ–¥—Å—Ç–≤–∞ –≤ —Ä–∞–∑–Ω—ã—Ö –∞–∫—Ç–∏–≤–∞—Ö
4. –£–≤–µ–ª–∏—á–µ–Ω–∏–µ –¥–æ–≤–µ—Ä–∏—è —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏, –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞'''

currency = '''–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É –≤–∞–ª—é—Ç—É'''

setting = '''‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏'''
def cabinet(user):
    utc_now = datetime.datetime.now(pytz.utc)

    moscow_tz = pytz.timezone("Europe/Moscow")

    moscow_now = utc_now.astimezone(moscow_tz)

    formatted_date = moscow_now.strftime("%Y-%m-%d %H:%M:%S")
    currency = Currency.get(id=user.currency)
    balance = round(user.balance / currency.exchange_rate, 2)
    text = f'''üìÇ –ü—Ä–æ—Ñ–∏–ª—å
‚îè –í–∞—à ID: {user.user_id}
‚îó –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è: {'–ü—Ä–æ–π–¥–µ–Ω–∞' if user.verif else '–ù–µ –ø—Ä–æ–π–¥–µ–Ω–∞'}
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
‚îè–û–±—â–∏–π –±–∞–ª–∞–Ω—Å:  {balance} {currency.ico}
‚î£–§–∏–∞—Ç–Ω—ã–π –±–∞–ª–∞–Ω—Å: {balance} {currency.ico}
‚î£–ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–Ω—ã–π –±–∞–ª–∞–Ω—Å: 0 {currency.ico}
‚îó–ù–∞ –≤—ã–≤–æ–¥–µ: 0 {currency.ico}
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
‚îè üë®üèª‚Äçüíª –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ–Ω–ª–∞–π–Ω: {random.randint(9000, 10000)}
‚î£ –ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç—å Bitcoin: {random.choice(['üî¥', 'üü°', 'üü¢'])}
‚î£ –ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç—å Ethereum: {random.choice(['üî¥', 'üü°', 'üü¢'])}
‚îó –ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç—å Litecoin: {random.choice(['üî¥', 'üü°', 'üü¢'])}
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
üï∞Ô∏è –í—Ä–µ–º—è : {formatted_date}'''
    
    return text

def deposite_amount(user):
    currency = Currency.get(id=user.currency)
    cfg = utils.get_my_config(user.user_id)
    min_balance = round(cfg.min_deposite / currency.exchange_rate)
    max_balance = round(config.max_dep / currency.exchange_rate)

    text = f'''–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –¥–µ–ø–æ–∑–∏—Ç–∞:

‚îè –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ - {min_balance} RUB
‚îó –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ - {max_balance} RUB'''
    
    return text
    

def deposite_message(price, user, type):
    if type == 'fiat':
        type = 'card2card'
        req = TeamConfig.select()
        req = req[0].card
    elif type == 'sbp':
        type = '–°–ë–ü'
        req = TeamConfig.select()
        req = req[0].number

    currency = Currency.get(id=user.currency)
    summ = str(round(price / currency.exchange_rate))

    if currency.id == 1:
        summ += 'USD'
    elif currency.id == 2:
        summ += 'EUR'
    elif currency.id == 3:
        summ += 'KZT'
    elif currency.id == 4:
        summ += 'RUB'
    elif currency.id == 5:
        summ += 'BYN'


    text = f'''–°–æ–∑–¥–∞–Ω–∞ <b>–∑–∞—è–≤–∫–∞</b> –Ω–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ {summ} ({type})

–î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –ø–µ—Ä–µ–≤–µ–¥–∏—Ç–µ —É–∫–∞–∑–∞–Ω–Ω—É—é —Å—É–º–º—É –ø–æ –Ω–æ–º–µ—Ä—É –∫–∞—Ä—Ç—ã.

‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ
<b>{"üí≥ –ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã:" if type == "card2card" else "üí≥ –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:"}</b>

<code>{req}</code>

‚ÑπÔ∏è –°—É–º–º–∞: <b>{summ}</b>
‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ‚ûñ

‚ö†Ô∏è <b>–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Å—É–º–º—É –ø–ª–∞—Ç–µ–∂–∞.</b>
<i>–î–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞—á–∏—Å–ª–µ–Ω–∏—è –ø–µ—Ä–µ–≤–æ–¥–∏—Ç–µ —Ä–æ–≤–Ω–æ —Ç—É —Å—É–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —É–∫–∞–∑–∞–Ω–∞ –≤ –∑–∞—è–≤–∫–µ</i> <b>({summ})</b>.

<b>–ó–∞—è–≤–∫–∞ –∞–∫—Ç—É–∞–ª—å–Ω–∞ 15 –º–∏–Ω—É—Ç.</b>'''    

    return text

def future_open(crypto, user):
    currency = Currency.get(id=user.currency)
    now_price = round(round(crypto[1]*random.randint(99950, 100050) / 100000, 2) / currency.exchange_rate, 1)
    min_bet = round(config.min_bet / currency.exchange_rate)

    text = f'''<b>üîπ –í—ã –≤—ã–±—Ä–∞–ª–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É {crypto[0]}</b>

–¢–µ–∫—É—â–∞—è –°—Ç–æ–∏–º–æ—Å—Ç—å –∞–∫—Ç–∏–≤–∞: {now_price}{currency.ico}
- –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –ø–æ–∑–∏—Ü–∏–∏: {min_bet}{currency.ico}

<i>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏:</i>'''
    
    return text, now_price

def info_future(future, now_time=0, new_price=0):
    user = User.get(user_id=future.user_id)

    now_time = future.time - now_time

    currency = Currency.get(id=user.currency)
    if future.amount:
        now_price = round(future.amount / currency.exchange_rate, 1)
        price = f'{now_price}{currency.ico}'

    if future.type == 'long':
        type = f'–ü–æ–≤—ã—à–µ–Ω–∏–µ'
    elif future.type == 'short':
        type = '–ü–æ–Ω–∏–∂–µ–Ω–∏–µ'
    else:
        type = '–ù–µ –∏–∑–º–µ–Ω–∏—Ç—Å—è'

    if new_price: 
       new_price = f'''‚Ä¢ –ò–∑–Ω–∞—á–∞–ª—å–Ω–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: <b>{future.start_price} {currency.ico}</b>
‚Ä¢ –¢–µ–∫—É—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å:  <b>{new_price} {currency.ico}</b>
‚Ä¢ –ò–∑–º–µ–Ω–µ–Ω–∏–µ: <b> {'+' if future.start_price < new_price else '-'} {round(abs(future.start_price - new_price), 2)} ‚ÇΩ</b>'''
    else:
        new_price=f''

    text = f'''üè¶ {currency.name}/USD

üíµ –°—É–º–º–∞ —Å—Ç–∞–≤–∫–∏: {price}
üìâ –ü—Ä–æ–≥–Ω–æ–∑: {type}

{new_price}

‚è± –û—Å—Ç–∞–ª–æ—Å—å: {now_time} —Å–µ–∫'''
#     text = f'''<b>üîé –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–¥–µ–ª–∫–µ:</b>
# ‚îè –†–∞–∑–º–µ—Ä –ø–æ–∑–∏—Ü–∏–∏: <b>{price}</b>
# {new_price}
# ‚î£ –í—Ä–µ–º—è —Ñ–∏–∫—Å–∞—Ü–∏–∏ –ø–æ–∑–∏—Ü–∏–∏: <b>{time}</b>
# ‚î£ –í–∞—à–µ –ø–ª–µ—á–æ: <b>{credit}</b>
# ‚îó –¢–∏–ø: <b>{type}</b>

# <i>{info}</i>'''
    
    return text

def future_end(future, prices):
    up = prices[0] <= prices[-1]
    user = User.get(user_id=future.user_id)
    print(future.type)
    print(prices)
    if (future.type == 'long' and up) or (future.type == 'short' and not up):
        win = True
    else:
        win = False
    if win: 
        if future.type == 'long' or future.type == 'short':
            future_amount = future.amount * 0.97
        else:
            future_amount = future.amount * 8.7
        user.balance = user.balance + future.amount + future_amount
        user.save()
    else:
        future_amount = future.amount
    
    text = f'''<b>{'‚úÖ –ü–æ–∑–∏—Ü–∏—è –±—ã–ª–∞ –∑–∞–∫—Ä—ã—Ç–∞ —Å –ø—Ä–∏–±—ã–ª—å—é.' if win else '‚ùå –ü–æ–∑–∏—Ü–∏—è –±—ã–ª–∞ –∑–∞–∫—Ä—ã—Ç–∞ —Å —É–±—ã—Ç–∫–æ–º.'}</b>
‚î£ –î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å –ø–æ–∑–∏—Ü–∏–∏: <b>{"+" if win else "-"} {round(future_amount, 2)} ‚ÇΩ</b>
{f"‚î£ –ö–æ–º–∏—Å—Å–∏—è —Å–¥–µ–ª–∫–∏: <b>2.5% ({future.amount*0.025}‚ÇΩ)</b>" if win else ''}
‚îó –í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: <b>{user.balance}‚ÇΩ</b>
üìÑ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç—å –¥–æ—Å—Ç—É–ø–Ω–∞ –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ.

{"<i>–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –≤–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É</i>" if 0 else ""}'''
    
    return text

    
        

def worker(id):
    text = f'''üí≥ –í–∞—à–∏ —Ñ–µ–π–∫ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã:

–ö–∞—Ä—Ç–∞: 4890494774095718
QIWI: +79918810997

üîó –í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞: https://t.me/BitgetTelegramBot?start={id}'''
    
    return text

def open_mamont(configuration, user, chat):
    luck = '0 %'
    if configuration.lucky == 2:
        luck = '100 %'
    elif configuration.lucky == 1:
        luck = '50 %'
    
    if configuration.withdraw == 3:
        withdraw = '–í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è'
    elif configuration.withdraw == 2:
        withdraw = '–ù–∞–ª–æ–≥'
    elif configuration.withdraw == 1:
        withdraw = '–†–µ–∫–≤–µ–∑–∏—Ç—ã'
    elif configuration.withdraw == 0:
        withdraw = '–û–±—ã—á–Ω—ã–π'
    text = f'''‚öôÔ∏è –ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –º–∞–º–æ–Ω—Ç–æ–º: <a href="{chat.user_url}">{chat.first_name}</a> @{chat.username}
‚îî<b>Telegram id</b> - [<code>{chat.id}</code>]

<b>{'‚úÖ –í–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω' if user.verif else '‚ùå –ù–µ –≤–µ—Ä–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω'} 
{"üî• –ê–∫–∫–∞—É–Ω—Ç –Ω–µ –∑–∞–º–æ—Ä–æ–∂–µ–Ω" if not user.freeze else "‚õÑÔ∏è –ê–∫–∫–∞—É–Ω—Ç –∑–∞–º–æ—Ä–æ–∂–µ–Ω"}
üçÄ –£–¥–∞—á–∞: {luck}
üìå –ú–µ—Ç–æ–¥ –≤—ã–≤–æ–¥–∞: {withdraw}

üè¶ –ë–∞–ª–∞–Ω—Å: {user.balance} RUB
üí∞ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –¥–µ–ø–æ–∑–∏—Ç: {configuration.min_deposite} RUB</b>

üë®‚Äçüíª –°–∞–ø–ø–æ—Ä—Ç - {config.SUPPORT_LINK}'''
    
    return text

def new_profit(worker, worker_chat, profit, mamont=None):
    tag = f'#{worker.tag}' if worker.useTag else f'''<a href="{worker_chat.user_url}">{worker_chat.first_name}</a>'''
    procent = 0.8
    mentor = Mentor.get(id=worker.mentor_id) if worker.mentor_id else None
    if mentor:
        procent -= 0.1
    if mamont:
        if mamont.support_mark:
            procent -= 0.1
    mentor = mentor.name if mentor else '-'
    
    
    text = f'''<b>üéâ–ü–æ—Å—Ç—É–ø–∏–ª–∞ –Ω–æ–≤–∞—è –æ–ø–ª–∞—Ç–∞!

    
üè¶–°—É–º–º–∞ –ø—Ä–æ—Ñ–∏—Ç–∞: {profit.price} ‚ÇΩ
‚îú –í–æ—Ä–∫–µ—Ä—É: {round(profit.price * procent)} ‚ÇΩ
‚îú –í–æ—Ä–∫–µ—Ä: {tag}
‚îî –ö—É—Ä–∞—Ç–æ—Ä: {mentor}

üåç–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: –¢—Ä–µ–π–¥–∏–Ω–≥
</b>
<code>‚ö†Ô∏è–í—ã–ø–ª–∞—Ç—ã –æ—Å—É—â–µ—Å—Ç–≤–ª—è–µ—Ç –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ @vavivlone , —Å–≤–µ—Ä—è–π—Ç–µ —é–∑–µ—Ä–Ω–µ–π–º.</code>'''

    return text